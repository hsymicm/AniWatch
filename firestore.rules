rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    match /users/{userId} {
      allow read;
      allow write: if isValidUser(userId);
    }

		match /usernames/{username} {
      allow read;
      allow write: if isValidUsername(username);
    }

    match /watchlists/{userId} {
        allow read: if request.auth != null;
      allow write: if request.auth.uid == userId;
    }
    
    function isValidUser(userId) {
      let isOwner = request.auth.uid == userId;
      let username = request.resource.data.username;
      let createdValidUsername = existsAfter(/databases/$(database)/documents/usernames/$(username));

      return isOwner && createdValidUsername;
    }

    function isValidUsername(username) {
      let isOwner = request.auth.uid == request.resource.data.uid;
      let isValidUserDoc = getAfter(/databases/$(database)/documents/users/$(request.auth.uid)).data.username == username;

      return isOwner && isValidUserDoc;     
    }
    
    match /{document=**} {
    	allow read;
      allow write: if false;
    }
  }
}